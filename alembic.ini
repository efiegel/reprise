[alembic]
script_location = alembic

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# timezone to use when rendering the date within the migration file as well as the
# filename.
# string value is passed to dateutil.tz.gettz()
# If specified, requires the python-dateutil library
# timezone = UTC

# max length of characters to apply to the "slug" field
# slug_length = 40

# set to 'true' to run the environment during the 'revision' command, regardless
# of autogenerate or whether a migration file is being output.  this allows
# evaluation of the environment within the context of the database connection.
# run_environment = false

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers = console
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers = console
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s

# SQLAlchemy will use the database URL from the env.py file
sqlalchemy.url = sqlite:///reprise.db
